version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.9.2
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper
    networks:
      - rent-scooter-net

  kafka:
    image: bitnami/kafka:3.4.1
    ports:
      - "9093:9093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
    container_name: kafka
    networks:
      - rent-scooter-net

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.2
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    command:
      - --server.port=9000
    networks:
      - rent-scooter-net

  postgres:
    image: postgres:13.15-alpine3.20
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=toor
    container_name: postgres
    networks:
      - rent-scooter-net

  redis:
    image: redis:7.0.4-alpine3.16
    ports:
      - "6379:6379"
    container_name: redis
    networks:
      - rent-scooter-net

networks:
  rent-scooter-net:
    driver: bridge